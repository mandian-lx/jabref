--- jabref-3.8.2/build.gradle.citationstyles
+++ jabref-3.8.2/build.gradle
@@ -126,8 +126,8 @@
     compile 'org.xmlunit:xmlunit-matchers:2.3.0'
 
     // need to use snapshots as the stable version is from 2013 and doesn't support v1.0.1 CitationStyles
-    compile 'org.citationstyles:styles:1.0.1-SNAPSHOT'
-    compile 'org.citationstyles:locales:1.0.1-SNAPSHOT'
+//    compile 'org.citationstyles:styles:1.0.1-SNAPSHOT'
+//    compile 'org.citationstyles:locales:1.0.1-SNAPSHOT'
     compile 'de.undercouch:citeproc-java:1.0.1'
 
     compile 'com.github.lgooddatepicker:LGoodDatePicker:8.3.0'
--- jabref-3.8.2/src/main/java/net/sf/jabref/logic/citationstyle/CitationStyle.java.citationstyles
+++ jabref-3.8.2/src/main/java/net/sf/jabref/logic/citationstyle/CitationStyle.java
@@ -1,5 +1,6 @@
 package net.sf.jabref.logic.citationstyle;
 
+import java.io.File;
 import java.io.IOException;
 import java.io.StringReader;
 import java.net.URISyntaxException;
@@ -47,6 +48,7 @@
     private final String title;
     private final String source;
 
+    private static final String styleLocalPath = "/usr/share/citationstyles-styles/";
 
     private CitationStyle(final String filename, final String title, final String source) {
         this.filepath = Objects.requireNonNull(filename);
@@ -88,7 +90,7 @@
         try {
             String text;
             String internalFile = (styleFile.startsWith("/") ? "" : "/") + styleFile;
-            URL url = CitationStyle.class.getResource(internalFile);
+            URL url = new File(styleLocalPath + styleFile).toURI().toURL();
             if (url != null) {
                 text = CSLUtils.readURLToString(url, StandardCharsets.UTF_8.toString());
             } else {
@@ -117,11 +119,11 @@
         try {
             final List<CitationStyle> citationStyles = new ArrayList<>();
             String path = CitationStyle.class.getProtectionDomain().getCodeSource().getLocation().toURI().getPath();
-
-            try (JarFile file = new JarFile(path)) {
-                Enumeration<JarEntry> entries = file.entries();
-                while (entries.hasMoreElements()) {
-                    String filename = entries.nextElement().getName();
+            try {
+                File file = new File(styleLocalPath);
+		File listFiles[] = file.listFiles();
+		for (int i = 0; i < listFiles.length; i++) {
+                    String filename = listFiles[i].getName();
                     if (!filename.startsWith("dependent") && filename.endsWith("csl")) {
                         CitationStyle citationStyle = CitationStyle.createCitationStyleFromFile(filename);
                         if (citationStyle != null) {
@@ -129,9 +131,12 @@
                         }
                     }
                 }
+            } catch (NullPointerException | SecurityException ex){
+                LOGGER.error("something went wrong while searching available CitationStyles. " +
+                    "Could not find path: " + styleLocalPath, ex);
             }
             return citationStyles;
-        } catch (IOException | URISyntaxException ex) {
+        } catch (URISyntaxException ex) {
             LOGGER.error("something went wrong while searching available CitationStyles. " +
                     "Are you running directly from source code?", ex);
         }
